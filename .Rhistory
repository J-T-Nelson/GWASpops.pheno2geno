return(allSNPfst_popsVSall_sum[ allSNPfst_popsVSall_sum > x])})
allSNPfst_popsVSall_topTables <- lapply(allSNPfst_sum, function(x){
return(allSNPfst_sum[ allSNPfst_sum > x])})
allSNPfst_popsVSall_topTables <- lapply(allSNP_quantiles, function(x){
return(allSNPfst_sum[ allSNPfst_sum > x])})
diseaseFst_popsVsall_quantiles <- quantile(diseaseFst_popsVsall_sum, probs=c(.99,.95,.90))
allDiseaseSNPfst_topTables <- lapply(allDiseaseSNPfst_quantiles, function(x){
return(allDiseaseSNPfst_sum[ allDiseaseSNPfst_sum > x])})
diseaseFst_popsVsalltopTables <- lapply(diseaseFst_popsVsall_quantiles, function(x){
return(diseaseFst_popsVsall_sum[ diseaseFst_popsVsall_sum > x])})
View(allFst_allPops_list_quantiles)
View(allFst_allPops_list_quantiles)
allFst_allPops_list_quantiles[[1]]
allFst_allPops_list_quantiles[[1]][1]
names(allFst_allPops_list_sum)
View(allFst_allPops_list_sum)
allFst_allPops_list_sum[[1]]
names(allFst_allPops_list_sum) <- thousGenPops$Population_Abbreviation
names(diseaseFst_allPops_list_sum) <- thousGenPops$Population_Abbreviation
View(allFst_allPops_list_sum)
# Establish important data to asssociate with top tables
colnames(full_SNP_Annotations_GWASc_Ensembl)
allFst_allPops_list_quantiles[[1]][1]
length(allFst_allPops_list_quantiles[[1]][1])
length(allFst_allPops_list_quantiles[[1]])
names(allFst_allPops_list_sum)
names(allFst_allPops_list_sum[[1]])
names(allFst_allPops_list_sum[1])
allFst_allPops_list_sum[[1]]
head(allFst_allPops_list_sum[[1]])
allFst_allPops_list_topTables <- list()
for(i in 1:length(allFst_allPops_list_quantiles)){
tempTableList <- c(allFst_allPops_list_sum[[i]][allFst_allPops_list_sum[[i]] > allFst_allPops_list_quantiles[[i]][1]],
allFst_allPops_list_sum[[i]][allFst_allPops_list_sum[[i]] > allFst_allPops_list_quantiles[[i]][2]],
allFst_allPops_list_sum[[i]][allFst_allPops_list_sum[[i]] > allFst_allPops_list_quantiles[[i]][3]])
allFst_allPops_list_topTables[[names(allFst_allPops_list_sum[i])]] <- tempTableList
}
View(allFst_allPops_list_topTables)
allFst_allPops_list_topTables <- list()
tempTableList <- list()
for(i in 1:length(allFst_allPops_list_quantiles)){
tempTableList <- c(allFst_allPops_list_sum[[i]][allFst_allPops_list_sum[[i]] > allFst_allPops_list_quantiles[[i]][1]],
allFst_allPops_list_sum[[i]][allFst_allPops_list_sum[[i]] > allFst_allPops_list_quantiles[[i]][2]],
allFst_allPops_list_sum[[i]][allFst_allPops_list_sum[[i]] > allFst_allPops_list_quantiles[[i]][3]])
allFst_allPops_list_topTables[[names(allFst_allPops_list_sum[i])]] <- tempTableList
}
tempTableList[1:10]
allFst_allPops_list_topTables <- list()
tempTableList <- list()
for(i in 1:length(allFst_allPops_list_quantiles)){
tempTableList <- list(allFst_allPops_list_sum[[i]][allFst_allPops_list_sum[[i]] > allFst_allPops_list_quantiles[[i]][1]],
allFst_allPops_list_sum[[i]][allFst_allPops_list_sum[[i]] > allFst_allPops_list_quantiles[[i]][2]],
allFst_allPops_list_sum[[i]][allFst_allPops_list_sum[[i]] > allFst_allPops_list_quantiles[[i]][3]])
allFst_allPops_list_topTables[[names(allFst_allPops_list_sum[i])]] <- tempTableList
}
View(tempTableList)
allFst_allPops_list_topTables <- list()
tempTableList <- list()
for(i in 1:length(allFst_allPops_list_quantiles)){
tempTableList <- list("99%"=allFst_allPops_list_sum[[i]][allFst_allPops_list_sum[[i]] > allFst_allPops_list_quantiles[[i]][1]],
"95%"=allFst_allPops_list_sum[[i]][allFst_allPops_list_sum[[i]] > allFst_allPops_list_quantiles[[i]][2]],
"90%"=allFst_allPops_list_sum[[i]][allFst_allPops_list_sum[[i]] > allFst_allPops_list_quantiles[[i]][3]])
allFst_allPops_list_topTables[[names(allFst_allPops_list_sum[i])]] <- tempTableList
}
View(tempTableList)
diseaseFst_allPops_list_topTables <- list()
tempTableList <- list()
for(i in 1:length(diseaseFst_allPops_list_quantiles)){
tempTableList <- list("99%" = diseaseFst_allPops_list_sum[[i]][diseaseFst_allPops_list_sum[[i]] > diseaseFst_allPops_list_quantiles[[i]][1]],
"95%" = diseaseFst_allPops_list_sum[[i]][diseaseFst_allPops_list_sum[[i]] > diseaseFst_allPops_list_quantiles[[i]][2]],
"90%" = diseaseFst_allPops_list_sum[[i]][diseaseFst_allPops_list_sum[[i]] > diseaseFst_allPops_list_quantiles[[i]][3]])
diseaseFst_allPops_list_topTables[[names(diseaseFst_allPops_list_sum[i])]] <- tempTableList
}
View(diseaseFst_fixed)
View(diseaseFst_allPops_list_topTables)
View(diseaseFst_allPops_list_topTables)
diseaseFst_allPops_list_topTables[["1000GENOMES:phase_3:ALL"]][["99%"]][1:10]
allSNPfst_topTables[1:10]
View(allSNPfst_topTables)
allSNPfst_topTables[1][1:10]
allSNPfst_topTables[[1]][1:10]
allSNPfst_popsVSall_topTables[1:2]
allSNPfst_popsVSall_topTables[[1]][1:2]
allDiseaseSNPfst_topTables[[1]][1:10]
diseaseFst_popsVsalltopTables[[1]][1:10]
getwd()
setwd('..')
setwd('./fst_sum_topTables/')
save(allSNPfst_topTables, file = "allSNPfst_topTables.rds")
save(allSNPfst_popsVSall_topTables, file = "allSNPfst_popsVSall_topTables.rds")
save(allDiseaseSNPfst_topTables, file = "allDiseaseSNPfst_topTables.rds")
save(diseaseFst_popsVsalltopTables, file = "diseaseFst_popsVsalltopTables.rds")
save(allFst_allPops_list_topTables, file = "allFst_allPops_list_topTables.rds")
save(diseaseFst_allPops_list_topTables, file = "diseaseFst_allPops_list_topTables.rds")
View(allSNPfst_popsVSall_topTables)
allSNPfst_popsVSall_topTables[["99%"]]
getwd()
load("./workingData/fst_sums/allSNPfst_sum.rds")
dens_allSNPfst <- density(allSNPfst_sum)
?pch
q99 <- quantile(allSNPfst_sum, 0.99)
q95 <- quantile(allSNPfst_sum, 0.95)
q90 <- quantile(allSNPfst_sum, 0.90)
# pch = point character, cex = character expand
plot(allSNPfst_sum, main = "All Fst Sums, All Population Pairs", ylab = "Sum of Variant Fst", xlab = "Index of Sample", pch = 20, cex = .7)
abline(h = q99, col = 'green', lwd = 2)
abline(h = q95, col = 'blue', lwd = 2)
abline(h = q90, col = 'red', lwd = 2)
text(-4000, y = q99, "1%", pos = 3, offset = .5, col = 'darkgreen')
text(-4000, y = q95, "5%", pos = 3, offset = .5, col = 'darkblue')
text(-4000, y = q90, "10%", pos = 3, offset = .5, col = 'darkred')
plot(dens_allSNPfst, main = "Density of All SNPs All Pop-Pairs")
abline(v = q99, col = 'green', lwd = 2)
abline(v = q95, col = 'blue', lwd = 2)
abline(v = q90, col = 'red', lwd = 2)
legend("topright", inset = 0.02, bg = "white", cex = .80, text.font = 4, box.lwd = 0)
summary(allSNPfst_sum)
sd(allSNPfst_sum)
sumSts <- c("Mean: 27.44", "Median: 20.88", "Standard Deviation: 24.25", "Min: 0.00", "Max: 197.02")
legend("topright", inset = 0.02, legend = sumSts, bg = "white", cex = .80, text.font = 4, box.lwd = 0)
q99 <- quantile(allDiseaseSNPfst_sum, 0.99)
q95 <- quantile(allDiseaseSNPfst_sum, 0.95)
q90 <- quantile(allDiseaseSNPfst_sum, 0.90)
# pch = point character, cex = character expand
plot(allDiseaseSNPfst_sum, main = "All Disease Fst Sums w/ All Population Pairs", ylab = "Sum of Variant Fst", xlab = "Index of Sample", pch = 20, cex = .7)
abline(h = q99, col = 'green', lwd = 2)
abline(h = q95, col = 'blue', lwd = 2)
abline(h = q90, col = 'red', lwd = 2)
text(-4000, y = q99, "1%", pos = 3, offset = .5, col = 'darkgreen')
text(-4000, y = q95, "5%", pos = 3, offset = .5, col = 'darkblue')
text(-4000, y = q90, "10%", pos = 3, offset = .5, col = 'darkred')
dens_allDiseaseSNPfst <- density(allDiseaseSNPfst_sum)
plot(dens_allDiseaseSNPfst, main = "Density of All Disease SNPs w/ All Pop-Pairs")
summary(allDiseaseSNPfst_sum)
sd(allDiseaseSNPfst_sum)
abline(v = q99, col = 'green', lwd = 2)
abline(v = q95, col = 'blue', lwd = 2)
abline(v = q90, col = 'red', lwd = 2)
sumSts <- c("Mean: 28.08", "Median: 21.68", "Standard Deviation: 23.96", "Min: 0.00", "Max: 165.72")
legend("topright", inset = 0.02, legend = sumSts, bg = "white", cex = .80, text.font = 4, box.lwd = 0)
View(diseaseFst_popsVSall)
View(diseaseFst_popsVsalltopTables)
diseaseFst_popsVsalltopTables[["99%"]]
View(diseaseFst_popsVSall)
dfpvInspect <- diseaseFst_popsVsall
dfpvInspect <- diseaseFst_popsVSall
dfpvInspect <- dplyr::copy(diseaseFst_popsVSall)
?copy
?deepcopy
?clone
dfpvInspect[dfpvInspect < .8] <- NA
class(dfpvInspect)
sum(is.na.data.frame(dfpvInspect))
sum(is.na.data.frame(diseaseFst_popsVSall)) # 1,119,007
dim(dfpvInspect)
36097 * 31
quantile(diseaseFst_popsVSall, probs = c(.999, .99, .95, .90, .75, .5, .25))
?quantile
?duplicate
quantile(as.matrix(diseaseFst_popsVSall), probs = c(.999, .99, .95, .90, .75, .5, .25))
summary(as.matrix(diseaseFst_popsVSall))
summary_diseaseFst_popsVSall <- summary(as.matrix(diseaseFst_popsVSall))
summary_diseaseFst_popsVSall # we can see just a handfull of values breach .5 but there are some real standouts per population.
View(diseaseFst_popsVSall)
L_diseaseFst_popsVSall <- split(diseaseFst_popsVSall, colnames(diseaseFst_popsVSall))
View(L_diseaseFst_popsVSall)
L_diseaseFst_popsVSall <- lapply(diseaseFst_popsVSall, as.list)
View(L_diseaseFst_popsVSall)
L_diseaseFst_popsVSall_topSnps <- lapply(L_diseaseFst_popsVSall, function(x){ return(x[x > .4])})
View(L_diseaseFst_popsVSall_topSnps)
L_diseaseFst_popsVSall_topSnps[["1000GENOMES:phase_3:ACB-X-1000GENOMES:phase_3:ALL"]][[1]]
L_diseaseFst_popsVSall[["1000GENOMES:phase_3:ACB-X-1000GENOMES:phase_3:ALL"]][[1]]
L_diseaseFst_popsVSall <- lapply(L_diseaseFst_popsVSall, function(x){ names(x) <- rownames(diseaseFst_popsVSall)})
View(L_diseaseFst_popsVSall)
L_diseaseFst_popsVSall <- lapply(diseaseFst_popsVSall, as.list) # this does it.
test_list <- split(rownames(diseaseFst_popsVSall), lapply(diseaseFst_popsVSall, as.list))
View(L_diseaseFst_popsVSall)
names(L_diseaseFst_popsVSall[[1]])
lapply(L_diseaseFst_popsVSall, function(x){ names(x)[1:5] }) # list of names.. lol
rownames(diseaseFst_popsVSall)
length(L_diseaseFst_popsVSall)
lapply(1:length(L_diseaseFst_popsVSall), function(x){ names(L_diseaseFst_popsVSall[[x]]) <- rownames(diseaseFst_popsVSall)})
View(L_diseaseFst_popsVSall_topSnps)
View(L_diseaseFst_popsVSall)
for(i in 1:length(L_diseaseFst_popsVSall)) {names(L_diseaseFst_popsVSall[[i]]) <- rownames(diseaseFst_popsVSall)}
View(L_diseaseFst_popsVSall_topSnps)
View(L_diseaseFst_popsVSall)
L_diseaseFst_popsVSall_topSnps <- lapply(L_diseaseFst_popsVSall, function(x){ return(x[x > .4])})
View(L_diseaseFst_popsVSall_topSnps)
L_diseaseFst_popsVSall_topSnps[["1000GENOMES:phase_3:ALL-X-1000GENOMES:phase_3:AMR"]]
names(L_diseaseFst_popsVSall_topSnps)
n <- names(L_diseaseFst_popsVSall_topSnps)
k <- length(L_diseaseFst_popsVSall_topSnps)
k <- sapply(L_diseaseFst_popsVSall_topSnps, length)
topSnps_popsVsAll <- cbind(n,k)
View(topSnps_popsVsAll)
tsp <- merge(topSnps_popsVsAll, pops)
View(pops)
tsp <- merge(topSnps_popsVsAll, pops, by.x = 'n', by.y = 'Population_Abbreviation')
n <- gsub('1000GENOMES:phase_3:ALL', '')
n <- gsub('1000GENOMES:phase_3:ALL', '', n)
n <- gsub('-X-', '', n)
topSnps_popsVsAll <- cbind(n,k)
View(topSnps_popsVsAll)
rm(topSnps_popsVsAll)
topSnps_popsVsAll <- cbind(n,k)
View(topSnps_popsVsAll)
tsp <- merge(topSnps_popsVsAll, pops, by.x = 'n', by.y = 'Population_Abbreviation')
View(tsp)
topSnps_popsVSall <- tsp
rm(topSnps_popsVsAll)
topSnps_popsVSall$n <- 'population_abbreviation'
View(topSnps_popsVSall)
topSnps_popsVSall <- cbind(n,k)
tsp <- merge(topSnps_popsVsAll, pops, by.x = 'n', by.y = 'Population_Abbreviation')
tsp <- merge(topSnps_popsVSall, pops, by.x = 'n', by.y = 'Population_Abbreviation')
names(topSnps_popsVSall$n) <- 'population_abbreviation'
tsp <- merge(topSnps_popsVSall, pops, by.x = 'n', by.y = 'Population_Abbreviation')
topSnps_popsVSall <- tsp
names(topSnps_popsVSall$n) <- 'population_abbreviation'
View(tsp)
colnames(topSnps_popsVSall)[colnames(topSnps_popsVSall)== 'n'] <- 'population_abbreviation'
View(topSnps_popsVSall)
colnames(topSnps_popsVSall)[colnames(topSnps_popsVSall)== 'k'] <- 'population_abbreviation'
colnames(topSnps_popsVSall)[colnames(topSnps_popsVSall)== 'k'] <- 'numSnps_>_0.4'
View(topSnps_popsVSall)
colnames(topSnps_popsVSall)
colnames(topSnps_popsVSall) <- c("population_abbreviation", 'numSnps_>_0.4', "Sample_Count","Pop_Ancestry","PopAnces_Graph_Labels")
colnames(topSnps_popsVSall)
View(topSnps_popsVSall)
order(topSnps_popsVSall$`numSnps_>_0.4`)
topSnps_popsVsall[order(topSnps_popsVSall$`numSnps_>_0.4`), ]
topSnps_popsVSall[order(topSnps_popsVSall$`numSnps_>_0.4`), ]
topSnps_popsVSall <- topSnps_popsVSall[order(topSnps_popsVSall$`numSnps_>_0.4`), ]
sort(topSnps_popsVSall$`numSnps_>_0.4`)
topSnps_popsVSall <- topSnps_popsVSall[order(as.numeric(topSnps_popsVSall$`numSnps_>_0.4`)), ]
View(topSnps_popsVSall)
topSnps_popsVSall <- topSnps_popsVSall[order(as.numeric(topSnps_popsVSall$`numSnps_>_0.4`), decreasing = T), ]
View(topSnps_popsVSall)
View(L_diseaseFst_popsVSall_topSnps)
View(L_diseaseFst_popsVSall)
# lowering threshold to see how many SNPs we capture.. lets try .35
L_diseaseFst_popsVSall_topSnps_35 <- lapply(L_diseaseFst_popsVSall, function(x){ return(x[x > .35])})
View(L_diseaseFst_popsVSall_topSnps_35)
View(L_diseaseFst_popsVSall_topSnps_35)
View(L_diseaseFst_popsVSall_topSnps_35)
n <- names(L_diseaseFst_popsVSall_topSnps)
n[1]
n <- grep("1000GENOMES:phase_3:ALL",'',n)
n <- grep("-X-",'',n)
n[1;10]
n[1:10]
n <- names(L_diseaseFst_popsVSall_topSnps)
n <- grep("1000GENOMES:phase_3:ALL",'',n)
n[1:10]
n <- names(L_diseaseFst_popsVSall_topSnps)
n[1:10]
n <- gsub("1000GENOMES:phase_3:ALL",'',n)
n <- gsub("-X-",'',n)
n[1:10]
names(L_diseaseFst_popsVSall_topSnps) <- n
names(L_diseaseFst_popsVSall_topSnps)
# Generate all possible pairs of indices
index_pairs <- combn(length(L_diseaseFst_popsVSall_topSnps), 2, simplify = FALSE)
?combn
index_pairs
?intersect
intersectTest <- dplyr::intersect(L_diseaseFst_popsVSall_topSnps[[1]],L_diseaseFst_popsVSall_topSnps[[2]])
intersectTest <- dplyr::intersect(a,b)
a <- c('dog','ham', 'cat')
b <- c('dogs','hafm', 'cat')
intersectTest <- dplyr::intersect(a,b)
intersection_results <- map(index_pairs, ~dplyr::intersect(L_diseaseFst_popsVSall_topSnps[[.x[1]]], L_diseaseFst_popsVSall_topSnps[[.x[2]]]))
intersection_results <- purrr::map(index_pairs, ~dplyr::intersect(L_diseaseFst_popsVSall_topSnps[[.x[1]]], L_diseaseFst_popsVSall_topSnps[[.x[2]]]))
View(intersection_results)
View(L_diseaseFst_popsVSall_topSnps)
View(index_pairs)
names(L_diseaseFst_popsVSall_topSnps[[30]])
n1 <- names(L_diseaseFst_popsVSall_topSnps[[30]])
n2 <- names(L_diseaseFst_popsVSall_topSnps[[31]])
n1_2intersect <- dplyr::intersect(n1,n2)
n1_2intersect
n1_2intersect
#naming the intersections:
pop_n <- names(L_diseaseFst_popsVSall_topSnps)
pop_n
#naming the intersections:
pop_n <- gsub("1000GENOMES:phase_3:",'',names(L_diseaseFst_popsVSall_topSnps))
pop_n
intersect_names <- purrr::map(index_pairs, paste0(pop_n[.x[1]], "_", pop_n[.x[2]]))
intersect_names <- purrr::map(index_pairs, ~paste0(pop_n[.x[1]], "_", pop_n[.x[2]]))
?purr::map
?purrr::map
intersect_names[1:10]
names(intersection_results)[1]
names(intersection_results) <- intersect_names
names(intersection_results)
sapply(intersection_results, length)
intersection_results[sapply(intersection_results, length) > 0 ]
intResultsFiltered <- intersection_results[sapply(intersection_results, length) > 0 ]
View(intResultsFiltered)
sum(sapply(intersection_results, length))
# checking for higher degree of intersection
allIntersections <- purrr::flatten(intResultsFiltered)
allIntersections
length(unique(allIntersections))
length(allIntersections)
allIntersections <- names(allIntersections)
length(allIntersections) # 48
length(unique(allIntersections)) # 22 .. so we see several multi-intersectional SNPs.. Lets count up how many times we see them
allIntTable <- table(allIntersections)
allIntTable
sum(sapply(L_diseaseFst_popsVSall_topSnps, length))
sum(sapply(L_diseaseFst_popsVSall_topSnps_35, length)) # 1207 for SNPs greater than .4 ...
allIntTable
uniIntersectingVariants <- unique(names(allIntersections))
uniIntersectingVariants
# 3-26 start:
allIntersections
uniIntersectingVariants <- unique(allIntersections)
uniIntersectingVariants
View(intResultsFiltered)
names(L_diseaseFst_popsVSall_topSnps)
pop_n
names(L_diseaseFst_popsVSall_topSnps) <- pop_n
names(L_diseaseFst_popsVSall_topSnps)
intVariantPopulations <- list()
for(i in 1:length(uniIntersectingVariants)){
temp <- character()
for(popWithVars in L_diseaseFst_popsVSall_topSnps){
if(uniIntersectingVariants[i] %in% names(popWithVars)){
temp <- paste0(temp,"_", names(L_diseaseFst_popsVSall_topSnps)[i])
}
}
intVariantPopulations[[names(uniIntersectingVariants)[i] ]] <- temp
}
names(uniIntersectingVariants)[i]
names(uniIntersectingVariants)[1]
uniIntersectingVariants[1]
intVariantPopulations <- list()
for(i in 1:length(uniIntersectingVariants)){
temp <- character()
for(popWithVars in L_diseaseFst_popsVSall_topSnps){
if(uniIntersectingVariants[i] %in% names(popWithVars)){
temp <- paste0(temp,"_", names(L_diseaseFst_popsVSall_topSnps)[i])
}
}
intVariantPopulations[[ uniIntersectingVariants[i] ]] <- temp
}
View(intVariantPopulations)
names(L_diseaseFst_popsVSall_topSnps[j])
names(L_diseaseFst_popsVSall_topSnps[2])
names(L_diseaseFst_popsVSall_topSnps[[2]])
intVariantPopulations <- list()
for(i in 1:length(uniIntersectingVariants)){
temp <- character()
for(popWithVars in 1:length(L_diseaseFst_popsVSall_topSnps)){
if(uniIntersectingVariants[i] %in% names(L_diseaseFst_popsVSall_topSnps[[j]])){
temp <- paste0(temp,"_", names(L_diseaseFst_popsVSall_topSnps)[j])
}
}
intVariantPopulations[[ uniIntersectingVariants[i] ]] <- temp
}
for(i in 1:length(uniIntersectingVariants)){
temp <- character()
for(j in 1:length(L_diseaseFst_popsVSall_topSnps)){
if(uniIntersectingVariants[i] %in% names(L_diseaseFst_popsVSall_topSnps[[j]])){
temp <- paste0(temp,"_", names(L_diseaseFst_popsVSall_topSnps)[j])
}
}
intVariantPopulations[[ uniIntersectingVariants[i] ]] <- temp
}
View(intVariantPopulations)
View(diseaseFst_allPops_list_quantiles)
View(diseaseFst_allPops_list_sum)
names(diseaseFst_allPops_list_quantiles)
names(diseaseFst_allPops_list_quantiles) <-
names(diseaseFst_allPops_list_sum)
names(diseaseFst_allPops_list_quantiles) <-
names(diseaseFst_allPops_list_sum)
names(diseaseFst_allPops_list_sum)
names(diseaseFst_allPops_list_quantiles)
names(diseaseFst_allPops_list_quantiles) <- gsub("1000GENOMES:phase_3:",'',names(diseaseFst_allPops_list_quantiles))
names(diseaseFst_allPops_list_quantiles)
View(diseaseFst_allPops_list_quantiles)
disFst_ap_top1percent <- lapply(diseaseFst_allPops_list_quantiles, function(x){ x[[1]]})
View(disFst_ap_top1percent)
disFst_ap_top1percent <- lapply(diseaseFst_allPops_list_quantiles, function(x){ x[1]})
View(disFst_ap_top1percent)
disFst_ap_top1percent[["ALL"]][["99%"]]
View(diseaseFst_allPops_list_quantiles)
View(diseaseFst_allPops_list_sum)
disFst_ap_top1percent <- lapply(diseaseFst_allPops_list_sum, function(x){
tempQuant <- quantile(x, .99);
return(x[x>tempQuant])})
View(disFst_ap_top1percent)
disFst_ap_top1percent <- lapply(diseaseFst_allPops_list_sum, function(x){
tempQuant <- quantile(x, .995);
return(x[x>tempQuant])})
View(disFst_ap_top1percent)
names(disFst_ap_top1percent) <- gsub("1000GENOMES:phase_3:",'',names(disFst_ap_top1percent))
View(L_diseaseFst_popsVSall_topSnps)
View(L_diseaseFst_popsVSall_topSnps_35)
View(L_diseaseFst_popsVSall_topSnps)
names(disFst_ap_top1percent[-1])
names(L_diseaseFst_popsVSall_topSnps[[1]])
disFst_ap_top1percent <- disFst_ap_top1percent[-1]
length(disFst_ap_top1percent)
names(L_diseaseFst_popsVSall_topSnps[i])
disFst_ap_top1percent[['LWK']]
names(disFst_ap_top1percent[['LWK']])
comp_top1_above.4 <- lapply(1:length(L_diseaseFst_popsVSall_topSnps), function(x){
names(L_diseaseFst_popsVSall_topSnps[[x]]) %in% names(disFst_ap_top1percent[[names(L_diseaseFst_popsVSall_topSnps[x])]])
})
View(comp_top1_above.4)
comp_top1_above.4[[1]]
names(comp_top1_above.4) <- names(disFst_ap_top1percent)
sapply(comp_top1_above.4, sum)
sapply(comp_top1_above.4, length)
names(disFst_ap_top1percent[[1]])
for(i in 1:length(comp_top1_above.4)){
names(comp_top1_above.4[[i]]) <- names(disFst_ap_top1percent[[i]])
}
comp_top1_above.4[["AFR"]]
for(i in 1:length(comp_top1_above.4)){
names(comp_top1_above.4[[i]]) <- names(L_diseaseFst_popsVSall_topSnps[[i]])
}
comp_top1_above.4[["AFR"]]
comp_top1_above.4[["LWK"]]
comp_top1_above.4[["MSL"]]
comp_top1_above.4[["YRI"]]
comp_top1_above.4[["AMR"]]
sapply(comp_top1_above.4, sum)
sapply(comp_top1_above.4, length)
names(comp_top1_above.4)
above.4_variants <- purrr::flatten(lapply(comp_top1_above.4, function(x){names(x)}))
View(above.4_variants)
above.4_variants <- as.character(above.4_variants)
names(disFst_ap_top1percent)
names(disFst_ap_top1percent[[1]])
top.5percent_variants <- as.character(purrr::flatten(lapply(disFst_ap_top1percent, function(x){names(x)})))
length(above.4_variants)
length(top.5percent_variants)
length(unique(above.4_variants)) # 1207
length(unique(top.5percent_variants)) # 5611
View(L_diseaseFst_popsVSall_topSnps)
above.4_variants <- purrr::flatten(lapply(L_diseaseFst_popsVSall_topSnps, function(x){names(x)}))
above.4_variants <- as.character(above.4_variants)
length(above.4_variants) # 1207
length(unique(above.4_variants)) # 477
# going to redo the intersection analysis with names instead of values to be sure
above.4_names <- lapply(L_diseaseFst_popsVSall_topSnps, function(x){names(x)})
View(above.4_names)
intersection_results <- purrr::map(index_pairs, ~dplyr::intersect(above.4_names[[.x[1]]],
above.4_names[[.x[2]]]))
View(intersection_results)
sum(sapply(length(intersection_results)))
sum(sapply(intersection_results, length))
sum(sapply(unique(purrr::flatten(intersection_results)), length))
sum(sapply(purrr::flatten(intersection_results), length))
uniIntersectingVariants <- unique(purrr::flatten(intersection_results))
uniIntersectingVariants
length(uniIntersectingVariants)
variantIntersectDegreeTable <- table(purrr::flatten(intersection_results))
variantIntersectDegreeTable
purrr::flatten(intersection_results)[1:10]
variantIntersectDegreeTable <- table(as.character(purrr::flatten(intersection_results)))
variantIntersectDegreeTable[1:10]
variantIntersectDegreeTable
max(variantIntersectDegreeTable)
summary(variantIntersectDegreeTable)
uniIntersectingVariants[1:20]
uniIntersectingVariants <- unique(as.character(purrr::flatten(intersection_results)))
length(uniIntersectingVariants) # 277
uniIntersectingVariants[1:20]
sum(!(unique(above.4_variants) %in% uniIntersectingVariants))
length(unique(asso$SNPS))
length(unique(full_SNP_Annotations_GWASc_Ensembl$VariantID))
209455/249792
paste0(round(209455/249792, digits = 2)*100, '5')
paste0(round(209455/249792, digits = 4)*100, '%')
View(full_fst_fixed)
nrow(full_fst_fixed)
paste0(round(159271/209455, digits = 4)*100, '%')
View(EFO_term_mapping)
unique(EFO_term_mapping$`Parent term`)
nrow(diseaseFst_fixed)
unique(rownames(diseaseFst_fixed))
length(unique(rownames(diseaseFst_fixed)))
save(diseaseFst_fixed, file='./workingData/full_data_for_analysis/diseaseFst_fixed.rds')
paste0(round(36097/159271, digits = 4)*100, '%')
q99 <- quantile(allSNPfst_sum, 0.99)
q95 <- quantile(allSNPfst_sum, 0.95)
q90 <- quantile(allSNPfst_sum, 0.90)
# pch = point character, cex = character expand
plot(allSNPfst_sum, main = "All Fst Sums, All Population Pairs", ylab = "Sum of Variant Fst", xlab = "Index of Sample", pch = 20, cex = .7)
abline(h = q99, col = 'green', lwd = 2)
abline(h = q95, col = 'blue', lwd = 2)
abline(h = q90, col = 'red', lwd = 2)
text(-4000, y = q99, "1%", pos = 3, offset = .5, col = 'darkgreen')
text(-4000, y = q95, "5%", pos = 3, offset = .5, col = 'darkblue')
text(-4000, y = q90, "10%", pos = 3, offset = .5, col = 'darkred')
thousGenPops$Population_Abbreviation
View(L_diseaseFst_popsVSall_topSnps)
unique(above.4_variants) %in% uniIntersectingVariants
singlePop_above.4_vars <- above.4_variants[unique(above.4_variants) %in% uniIntersectingVariants]
unique(singlePop_above.4_vars)
singlePop_above.4_vars <- above.4_variants[!(unique(above.4_variants) %in% uniIntersectingVariants)]
unique(singlePop_above.4_vars)
length(uniIntersectingVariants) # 277
length(unique(singlePop_above.4_vars))
above.4_names[1]
