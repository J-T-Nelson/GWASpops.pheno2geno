sum(mapT_in_diseaseT)
?writeLines
writeLines(diseaseTrait, 'diseaseTrait.txt')
writeLines(mappedTrait, 'mappedTrait.txt')
diseaseTrait <- tolower(diseaseTrait)
mappedTrait <- tolower(mappedTrait)
mapT_in_diseaseT <- mappedTrait %in% diseaseTrait
sum(mapT_in_diseaseT)
disease_mapped_Traits <- append(diseaseTrait, mappedTrait)
disease_mapped_Traits <- unique(disease_mapped_Traits)
writeLines(disease_mapped_Traits, 'disease_mapped_traits.txt')
nchar(disease_mapped_Traits)
numCharsALLtraits <- sum(nchar(disease_mapped_Traits))
numCharsALLtraits
1217227/2000
any(is.na(diseaseTrait))
any(is.na(mappedTrait)) # FALSE
mappedTrait
traitsDF <- asso[, c(`DISEASE/TRAIT`, 'MAPPED_TRAIT')]
traitsDF <- asso[, c('DISEASE/TRAIT', 'MAPPED_TRAIT')]
View(traitsDF)
write.csv(traitsDF, file = "traitsDF.cdf")
any(is.null(diseaseTrait)) # FALSE
any(is.null(mappedTrait))
any(is.null(diseaseTrait))
any(is.null(mappedTrait))
study_titles <- unique(asso$STUDY)
writeLines(study_titles, 'GWASc_study_titles.txt')
nchar(study_titles)
studyTitle_chars <- sum(nchar(study_titles))
study
studyTitle_chars
599738/2000
disTraitTable <- table(diseaseTrait)
disTraitTable <- table(asso$`DISEASE/TRAIT`)
mapTraitTable <- table(asso$MAPPED_TRAIT)
sort(disTraitTable, decreasing = T)[1:100]
sort(mapTraitTable, decreasing = T)[1:100] # no default terms revealed
sort(table(asso$STUDY), decreasing = T)[1:200]
rm(full_fst_fixed)
View(full_popAlleleFreq_perAllele)
rm(full_popAlleleFreq_perAllele)
View(full_fst)
part_fstEX <- full_fst[1:10,]
rm(full_fst)
rm(full_fst, testRun, debug_fst_fixed, debug2_fst_fixed, debugFstCalc, allrsID, allrsID_ch10, alleleDF, num_missing_pops)
rm(check_alleles, masterList, mutateRows, testAlleleDF, rows_with_na)
View(full_fst_unprocessed)
totalNA_postFstCalc <- sum(is.na(full_fst_unprocessed))
totalNA_postFstCalc
# samples processed 213710
53329/213710
full_fst_unprocessed <- full_fst_unprocessed[!is.na(full_fst_unprocessed),]
full_fst_unprocessed <- full_fst_unprocessed[!is.na(full_fst_unprocessed)]
View(full_fst_unprocessed)
# see if all have 496 rows
num_rows_in_fullFst <- unique(sapply(full_fst_unprocessed, function(x){ nrow(x) }))
num_rows_in_fullFst
num_badRows <- sapply(full_fst_unprocessed, function(x){ nrow(x) }) != 496
sum(num_badRows)
num_badRows{1:10}
num_badRows[1:10]
full_fst_unprocessed <- full_fst_unprocessed[!num_badRows]
fstFullNames <- names(full_fst_unprocessed)
full_fst_unprocessed <- cbind.data.frame(full_fst_unprocessed)
View(full_fst_unprocessed)
full_fst_unprocessed <- as.data.frame(t(full_fst_unprocessed))
View(full_fst_unprocessed)
View(full_fst_unprocessed)
rownames(full_fst_unprocessed) <- fstFullNames
View(full_fst_unprocessed)
dupeNames <- duplicated(fstFullNames)
sum(dupeNames)
?duplicated
fromLast_dupes <- duplicated(fstFullNames, fromLast = T)
sum(fromLast_dupes)
identical(fromLast_dupes, dupeNames)
id(fromLast_dupes)
fromLast_dupes %is% dupeNames
?address
data.table::address(fromLast_dupes)
data.table::address(dupeNames)
#### "The identical() function in R checks whether two objects are exactly equal in terms of both their contents and attributes."
dupeIdx <- which(dupeNames)
revDupeIdx <- which(fromLast_dupes)
allDupesIdx <- append(dupeIdx, revDupeIdx)
946X2
946*2
dupe_fst <- full_fst_unprocessed[allDupesIdx,]
View(dupe_fst)
?duplicated
dupeRows <- duplicated.data.frame(dupe_fst)
sum(dupeRows)
which(dupeRows)
sum(fromLast_dupes) # 946
fstFullNames <- fstFullNames[!fromLast_dupes]
full_fst_unprocessed <- full_fst_unprocessed[!fromLast_dupes, ]
rownames(full_fst_unprocessed) <- fstFullNames
object.size(full_fst_unprocessed)
?object.size
object.size(full_fst_unprocessed, 'Gb')
object.size(full_fst_unprocessed, Gb)
object.size(full_fst_unprocessed, units = 'Gb')
643533184/1024
(643533184/1024)/1024
(643533184/1024)/1024/1024
print(object.size(x=lapply(ls(), get)), units="Mb")
ls()
dupeRowsTotal <- duplicated.data.frame(full_fst_unprocessed)
sum(dupeRowsTotal)
full_fst_fixed <- full_fst_unprocessed
getwd()
setwd("./workingData/full_data_for_analysis/")
save(full_fst_fixed, file = 'full_fst_fixed.rds')
View(asso)
sum(is.na(full_fst_fixed))
41.2+23.22+50+37.82+103.73+36.93+46
338.9/2
#importing novel EFO term table
data.table::fread("./workingData/gwas_catalog_trait-mappings_r2023-03-11.tsv")
#importing novel EFO term table
EFO_term_mapping <- data.table::fread("./workingData/gwas_catalog_trait-mappings_r2023-03-11.tsv")
uniParentTerms <- unique(EFO_term_mapping)
length(uniParentTerms)
uniParentTerms <- unique(EFO_term_mapping$`Parent term`)
length(uniParentTerms) # 5
uniParentTerms
View(asso)
colnames(asso)
?merge
getwd()
load("./workingData/full_data_for_analysis/full_SNP_Annotations_GWASc_Ensembl.rds")
colnames(full_SNP_Annotations_GWASc_Ensembl)
colnames(EFO_term_mapping)
# going to attempt merge by 'Disease trait' first... if it doesnt work.. Maybe Mapped_Trait_URI & EFO URI?
mergeFrame <- EFO_term_mapping[, c('Disease trait', 'Parent term',"Parent URI")]
SNPanno_GWAS_ensembl <- merge(full_SNP_Annotations_GWASc_Ensembl, mergeFrame, by = intersect(names(x), names(y)))
SNPanno_GWAS_ensembl <- merge(full_SNP_Annotations_GWASc_Ensembl, mergeFrame,
by = intersect(names(full_SNP_Annotations_GWASc_Ensembl), names(mergeFrame)))
SNPanno_GWAS_ensembl <- merge(full_SNP_Annotations_GWASc_Ensembl, mergeFrame, by.x = "DISEASE/TRAIT", by.y = "Disease trait")
uni_parent_URI <- unique(EFO_term_mapping$`Parent URI`)
length(uni_parent_URI)
uni_parent_URI
uniParentTerms
mergeFrame <- EFO_term_mapping[, c('Disease trait', 'Parent term')]
SNPanno_GWAS_ensembl <- merge(full_SNP_Annotations_GWASc_Ensembl, mergeFrame, by.x = "DISEASE/TRAIT", by.y = "Disease trait")
SNPanno_GWAS_ensembl <- merge(full_SNP_Annotations_GWASc_Ensembl, mergeFrame, by.x = "DISEASE/TRAIT", by.y = "Disease trait",
all.x = T, all.y = F)
filter <- EFO_term_mapping$`Disease trait` %in% full_SNP_Annotations_GWASc_Ensembl$`DISEASE/TRAIT`
sum(filter)
length(unique(full_SNP_Annotations_GWASc_Ensembl$`DISEASE/TRAIT`))
length(unique(full_SNP_Annotations_GWASc_Ensembl$MAPPED_TRAIT)) # 19095
length(unique(EFO_term_mapping$`Disease trait`))
matchedTermsFromEFO <- EFO_term_mapping$`Disease trait`[filter]
uniTermMatches <- unique(full_SNP_Annotations_GWASc_Ensembl$`DISEASE/TRAIT`) %in% matchedTermsFromEFO
sum(uniTermMatches)
mergeFrame <- mergeFrame[ mergeFrame$`Disease trait` %in% unique(full_SNP_Annotations_GWASc_Ensembl$`DISEASE/TRAIT`), ]
mergeFrame <- unique(mergeFrame)
dupeDisease_traitsMergeFrame <- duplicated(mergeFrame$`Disease trait`)
sum(dupeDisease_traitsMergeFrame)
colnames(EFO_term_mapping)
mergeFrame <- EFO_term_mapping[, c('EFO term', 'Parent term')]
sum(uniqu(full_SNP_Annotations_GWASc_Ensembl$MAPPED_TRAIT) %in% unique(EFO_term_mapping$`EFO term`))
sum(unique(full_SNP_Annotations_GWASc_Ensembl$MAPPED_TRAIT) %in% unique(EFO_term_mapping$`EFO term`))
sum(unique(full_SNP_Annotations_GWASc_Ensembl$MAPPED_TRAIT) %in% EFO_term_mapping$`EFO term`)
# ^^ OK ... we have a substantial number of missing values. Meaning the data is bad I think. This shouldn't be the case could caps be an issue?
sum(tolower(unique(full_SNP_Annotations_GWASc_Ensembl$MAPPED_TRAIT)) %in% tolower(unique(EFO_term_mapping$`EFO term`))) # 5103
length(unique(full_SNP_Annotations_GWASc_Ensembl$MAPPED_TRAIT_URI))
sum(unique(full_SNP_Annotations_GWASc_Ensembl$MAPPED_TRAIT_URI) %in% unique(EFO_term_mapping$`EFO URI`))
sum(unique(tolower(full_SNP_Annotations_GWASc_Ensembl$MAPPED_TRAIT_URI)) %in% unique(tolower(EFO_term_mapping$`EFO URI`)))
missingMappedTraits <-  unique(full_SNP_Annotations_GWASc_Ensembl$MAPPED_TRAIT[!(tolower(unique(full_SNP_Annotations_GWASc_Ensembl$MAPPED_TRAIT)) %in% tolower(unique(EFO_term_mapping$`EFO term`)))]
missingMappedTraits <-  unique(full_SNP_Annotations_GWASc_Ensembl$MAPPED_TRAIT)[!(tolower(unique(full_SNP_Annotations_GWASc_Ensembl$MAPPED_TRAIT)) %in% tolower(unique(EFO_term_mapping$`EFO term`)))]
#
missingMappedTraits
length(missingMappedTraits)
20781 - 19095
mergeFrame <- EFO_term_mapping[, c('Disease trait', 'Parent term')]
mergeFrame <- EFO_term_mapping[, c('Disease trait', 'Parent term')]
mergeFrame <- mergeFrame[ mergeFrame$`Disease trait` %in% unique(full_SNP_Annotations_GWASc_Ensembl$`DISEASE/TRAIT`), ]
mergeFrame <- unique(mergeFrame) # 20781 rows... so we do have some
SNPanno_GWAS_ensembl <- merge(full_SNP_Annotations_GWASc_Ensembl, mergeFrame, by.x = "DISEASE/TRAIT", by.y = "Disease trait")
# Error in vecseq(f__, len__, if (allow.cartesian || notjoin || !anyDuplicated(f__, :
#             Join results in 522,956 rows; more than 450864 = nrow(x)+nrow(i).
430083/522956
430083*1.18
430083*1.2
430083*1.22
430083*1.21
# Error in vecseq(f__, len__, if (allow.cartesian || notjoin || !anyDuplicated(f__, :
#             Join results in 522,956 rows; more than 450864 = nrow(x)+nrow(i).
522956/430083 #
SNPanno_GWAS_ensembl <- merge(full_SNP_Annotations_GWASc_Ensembl, mergeFrame, by.x = "DISEASE/TRAIT", by.y = "Disease trait",
allow.cartesian = T)
full_SNP_Anno_withParentalTerms <- full_SNP_Annotations_GWASc_Ensembl
getwd()
setwd('./workingData/full_data_for_analysis/')
save(full_SNP_Anno_withParentalTerms, file('full_SNP_Anno_withParentalTerms.rds'))
save(full_SNP_Anno_withParentalTerms, file= 'full_SNP_Anno_withParentalTerms.rds')
full_SNP_Anno_withParentalTerms <- SNPanno_GWAS_ensembl
save(full_SNP_Anno_withParentalTerms, file= 'full_SNP_Anno_withParentalTerms.rds')
unique(EFO_term_mapping$`Parent term`)
# [1] "Cancer"                           "NR"                               "Other disease"                    "Digestive system disorder"
# [5] "Other trait"                      "Other measurement"                "Cardiovascular disease"           "Neurological disorder"
# [9] "Immune system disorder"           "Cardiovascular measurement"       "Hematological measurement"        "Biological process"
# [13] "Body measurement"                 "Lipid or lipoprotein measurement" "Metabolic disorder"               "Inflammatory measurement"
# [17] "Liver enzyme measurement"
diseaseParentTerms <- c('Cancer', 'Other disease', 'Digestive system disorder', 'Cardiovascular disease', 'Neurological disorder', 'Immune system disorder', 'Metabolic disorder')
SNPannoTable_disease <- full_SNP_Anno_withParentalTerms[full_SNP_Anno_withParentalTerms$`Parent term` %in% diseaseParentTerms ,]
# 77221 obs
unique(SNPannoTable_disease$VariantID)
# 77221 obs
sum(unique(SNPannoTable_disease$VariantID))
# 77221 obs
length(unique(SNPannoTable_disease$VariantID))
uniDiseaseSNPs <- unique(SNPannoTable_disease$VariantID)
numDiseaseSNP_withFst <- uniDiseaseSNPs %in% rownames(full_fst_fixed)
numDiseaseSNP_withFst <- sum(uniDiseaseSNPs %in% rownames(full_fst_fixed))
sum(unique(rownames(full_fst_fixed)))
length(unique(rownames(full_fst_fixed)))
36,097 / 159271
36097 / 159271
# SANITY CHECK ...
numTotalSNP_withFst <- sum(unique(full_SNP_Anno_withParentalTerms$VariantID) %in% rownames(full_fst_fixed))
numTotalSNP_withFst
full_SNP_Annotations_GWASc_Ensembl
uniqueSNP_asso <- unique(asso$SNPS)
uniqueSNP_postEnsemblDataGrab <- unique(full_SNP_Annotations_GWASc_Ensembl$VariantID)
# we expect to see substantial loss here... as many SNPs were not actually grabbed due to failed data transfer that was never solved.
length(uniqueSNP_asso)
length(uniqueSNP_postEnsemblDataGrab)
249792 - 209455
209455/249792
diseaseFst_fixed <- full_fst_fixed[unique(full_SNP_Anno_withParentalTerms$VariantID) %in% rownames(full_fst_fixed),]
diseaseFst_fixed <- full_fst_fixed[rownames(full_fst_fixed) %in% uniDiseaseSNPs,]
allSNPfst_sum <- sapply(1:nrow(full_fst_fixed), function(i){ return(sum(full_fst_fixed[i, ])) })
allDiseaseSNPfst_sum <- sapply(1:nrow(diseaseFst_fixed), function(i){ return(sum(diseaseFst_fixed[i, ])) })
# Each pop against ALL pop
#popsVSall is the analysis of each population against the 1000kGenomes:ALL population
allFst_popsVSall <- full_fst_fixed[, grep("ALL", colnames(full_fst_fixed) )]
View(allFst_popsVSall)
diseaseFst_popsVSall <- diseaseFst_fixed[, grep("ALL", colnames(diseaseFst_fixed) )]
31*32
496*2
# each pop on its own
allFst_allPops_list <- lapply(thousGenPops@Population_Abbreviation, function(i){ full_fst_fixed[, grep(i, colnames(full_fst_fixed))]})
# each pop on its own
allFst_allPops_list <- lapply(thousGenPops$Population_Abbreviation, function(i){ full_fst_fixed[, grep(i, colnames(full_fst_fixed))] })
diseaseFst_allPops_list <- lapply(thousGenPops$Population_Abbreviation, function(i){ diseaseFst_fixed[, grep(i, colnames(diseaseFst_fixed))] })
allFst_popsVsall_sum <- sapply(1:nrow(allFst_popsVSall), function(i){ return(sum(allFst_popsVSall[i, ])) })
diseaseFst_popsVsall_sum <- sapply(1:nrow(diseaseFst_popsVSall), function(i){ return(sum(diseaseFst_popsVSall[i, ])) })
allFst_allPops_list_sum <- lapply(allFst_allPops_list, function(x){
sapply(1:nrow(x), function(i){
return(sum(x[i, ]))
})
})
diseaseFst_allPops_list_sum <- lapply(diseaseFst_allPops_list, function(x){
sapply(1:nrow(x), function(i){
return(sum(x[i, ]))
})
})
getwd()
setwd("..")
setwd("./fst_sums")
getwd()
save(allSNPfst_sum, file="allSNPfst_sum.rds")
save(allDiseaseSNPfst_sum, file="allDiseaseSNPfst_sum.rds")
save(allFst_popsVsall_sum, file="allFst_popsVsall_sum.rds")
save(diseaseFst_popsVsall_sum, file="diseaseFst_popsVsall_sum.rds")
save(allFst_allPops_list_sum, file="allFst_allPops_list_sum.rds")
save(diseaseFst_allPops_list_sum, file="diseaseFst_allPops_list_sum.rds")
setwd("..")
setwd("..")
getwd()
allDiseaseSNPfst_sum[1:10]
allFst_popsVsall_sum[1:10]
allSNPfst_sum[1:10]
diseaseFst_popsVsall_sum[1:10]
View(diseaseFst_allPops_list)
View(diseaseFst_allPops_list[[1]])
rownames(diseaseFst_fixed)[1:10]
names(allDiseaseSNPfst_sum[1:10]) <- rownames(diseaseFst_fixed)
names(allDiseaseSNPfst_sum) <- rownames(diseaseFst_fixed)
names(diseaseFst_popsVsall_sum) <- rownames(diseaseFst_fixed)
names(allSNPfst_sum) <- rownames(full_fst_fixed)
names(allFst_popsVsall_sum) <- rownames(full_fst_fixed)
allDiseaseSNPfst_sum[1:10]
allFst_popsVsall_sum[1:10]
allSNPfst_sum[1:10] # not seeing names on values of these vectors... need to add that into them before doing anything else with them
diseaseFst_popsVsall_sum[1:10]
View(allFst_allPops_list_sum)
allFst_allPops_list_sum[[1]]
names(allFst_allPops_list_sum)
names(allFst_allPops_list_sum[[1]])
names(allFst_allPops_list_sum[1])
View(allFst_allPops_list)
names(allFst_allPops_list)[1:10]
names(allFst_allPops_list[[1]])[1:10]
rownames(allFst_allPops_list[[1]])[1:10]
# apply names to list sums
for(i in 1:length(allFst_allPops_list_sum)){
names(allFst_allPops_list_sum[[i]]) <- rownames(allFst_allPops_list[[i]])
}
View(allFst_allPops_list_sum)
allFst_allPops_list_sum[[1]][1:10]
for(i in 1:length(diseaseFst_allPops_list_sum)){
names(diseaseFst_allPops_list_sum[[i]]) <- rownames(diseaseFst_allPops_list[[i]])
}
diseaseFst_allPops_list_sum[[1]][1:10]
getwd()
setwd("./workingData/fst_sums")
getwd()
save(allSNPfst_sum, file="allSNPfst_sum.rds")
save(allDiseaseSNPfst_sum, file="allDiseaseSNPfst_sum.rds")
save(allFst_popsVsall_sum, file="allFst_popsVsall_sum.rds")
save(diseaseFst_popsVsall_sum, file="diseaseFst_popsVsall_sum.rds")
save(allFst_allPops_list_sum, file="allFst_allPops_list_sum.rds")
save(diseaseFst_allPops_list_sum, file="diseaseFst_allPops_list_sum.rds")
?quantile
quantile(x <- rnorm(1001)) # Extremes & Quartiles by default
quantile(x,  probs = c(0.1, 0.5, 1, 2, 5, 10, 50, NA)/100)
allSNP_quantiles <- quantile(allSNPfst_sum, probs=c(99,95,90))
allSNP_quantiles <- quantile(allSNPfst_sum, probs=c(.99,.95,.90))
allSNP_popsVSall_quantiles <- quantile(allFst_popsVSall_sum, probs=c(.99,.95,.90))
allFst_popsVsall_sum[1:10]
allSNP_popsVSall_quantiles <- quantile(allFst_popsVsall_sum, probs=c(.99,.95,.90))
allDiseaseSNPfst_quantiles <- quantile(allDiseaseSNPfst_sum, probs=c(.99,.95,.90))
diseaseFst_popsVsall_quantile <- quantile(diseaseFst_popsVsall_sum, probs=c(.99,.95,.90))
allSNPfst_topTables <- lapply(allSNP_quantiles, function(x){ return(allSNPfst_sum[ allSNPfst_sum > x])})
View(allSNPfst_topTables)
allSNPfst_topTables[["99%"]]
allSNPfst_popsVSall_topTables <- lapply(allSNP_popsVSall_quantiles, function(x){
return(allSNP_popsVSall_quantiles[ allSNP_popsVSall_quantiles > x])})
allDiseaseSNPfst_topTables <- lapply(allDiseaseSNPfst_quantiles, function(x){
return(allDiseaseSNPfst_quantiles[ allDiseaseSNPfst_quantiles > x])})
diseaseFst_popsVsalltopTables <- lapply(diseaseFst_popsVsall_quantile, function(x){
return(diseaseFst_popsVsall_quantile[ diseaseFst_popsVsall_quantile > x])})
rm(gwasData, part_fstEX, i , x, nonAncestralAllele,study_titles, studyTitle_chars, uni_parent_URI, uniDiseaseSNPs)
rm(uniTermMatches, uniParentTerms)
rm(dupeDisease_traitsMergeFrame, dupeIdx, dupeNames, dupeRows, dupeRowsTotal, filter, fromLast_dupes, mapT_in_diseaseT, mappedTrait, mapTraitTable)
allFst_allPops_list_quantiles <- lapply(allFst_allPops_list_sum, function(x){ return(quantile(x, probs=c(.99,.95,.90)))})
diseaseFst_allPops_list_quantiles <- lapply(diseaseFst_allPops_list_sum, function(x){ return(quantile(x, probs=c(.99,.95,.90)))})
View(allFst_allPops_list_quantiles)
allFst_allPops_list_quantiles[[1]]
allSNPfst_popsVSall_topTables <- lapply(allSNP_popsVSall_sum, function(x){
return(allSNP_popsVSall_sum[ allSNP_popsVSall_sum > x])})
allSNPfst_popsVSall_topTables <- lapply(allSNP_popsVsall_sum, function(x){
return(allSNP_popsVsall_sum[ allSNP_popsVsall_sum > x])})
allSNPfst_popsVSall_topTables <- lapply(allSNPfst_popsVsall_sum, function(x){
return(allSNPfst_popsVsall_sum[ allSNPfst_popsVsall_sum > x])})
allSNPfst_popsVSall_topTables <- lapply(allSNPfst_popsVSall_sum, function(x){
return(allSNPfst_popsVSall_sum[ allSNPfst_popsVSall_sum > x])})
allSNPfst_popsVSall_topTables <- lapply(allSNPfst_sum, function(x){
return(allSNPfst_sum[ allSNPfst_sum > x])})
allSNPfst_popsVSall_topTables <- lapply(allSNP_quantiles, function(x){
return(allSNPfst_sum[ allSNPfst_sum > x])})
diseaseFst_popsVsall_quantiles <- quantile(diseaseFst_popsVsall_sum, probs=c(.99,.95,.90))
allDiseaseSNPfst_topTables <- lapply(allDiseaseSNPfst_quantiles, function(x){
return(allDiseaseSNPfst_sum[ allDiseaseSNPfst_sum > x])})
diseaseFst_popsVsalltopTables <- lapply(diseaseFst_popsVsall_quantiles, function(x){
return(diseaseFst_popsVsall_sum[ diseaseFst_popsVsall_sum > x])})
View(allFst_allPops_list_quantiles)
View(allFst_allPops_list_quantiles)
allFst_allPops_list_quantiles[[1]]
allFst_allPops_list_quantiles[[1]][1]
names(allFst_allPops_list_sum)
View(allFst_allPops_list_sum)
allFst_allPops_list_sum[[1]]
names(allFst_allPops_list_sum) <- thousGenPops$Population_Abbreviation
names(diseaseFst_allPops_list_sum) <- thousGenPops$Population_Abbreviation
View(allFst_allPops_list_sum)
# Establish important data to asssociate with top tables
colnames(full_SNP_Annotations_GWASc_Ensembl)
allFst_allPops_list_quantiles[[1]][1]
length(allFst_allPops_list_quantiles[[1]][1])
length(allFst_allPops_list_quantiles[[1]])
names(allFst_allPops_list_sum)
names(allFst_allPops_list_sum[[1]])
names(allFst_allPops_list_sum[1])
allFst_allPops_list_sum[[1]]
head(allFst_allPops_list_sum[[1]])
allFst_allPops_list_topTables <- list()
for(i in 1:length(allFst_allPops_list_quantiles)){
tempTableList <- c(allFst_allPops_list_sum[[i]][allFst_allPops_list_sum[[i]] > allFst_allPops_list_quantiles[[i]][1]],
allFst_allPops_list_sum[[i]][allFst_allPops_list_sum[[i]] > allFst_allPops_list_quantiles[[i]][2]],
allFst_allPops_list_sum[[i]][allFst_allPops_list_sum[[i]] > allFst_allPops_list_quantiles[[i]][3]])
allFst_allPops_list_topTables[[names(allFst_allPops_list_sum[i])]] <- tempTableList
}
View(allFst_allPops_list_topTables)
allFst_allPops_list_topTables <- list()
tempTableList <- list()
for(i in 1:length(allFst_allPops_list_quantiles)){
tempTableList <- c(allFst_allPops_list_sum[[i]][allFst_allPops_list_sum[[i]] > allFst_allPops_list_quantiles[[i]][1]],
allFst_allPops_list_sum[[i]][allFst_allPops_list_sum[[i]] > allFst_allPops_list_quantiles[[i]][2]],
allFst_allPops_list_sum[[i]][allFst_allPops_list_sum[[i]] > allFst_allPops_list_quantiles[[i]][3]])
allFst_allPops_list_topTables[[names(allFst_allPops_list_sum[i])]] <- tempTableList
}
tempTableList[1:10]
allFst_allPops_list_topTables <- list()
tempTableList <- list()
for(i in 1:length(allFst_allPops_list_quantiles)){
tempTableList <- list(allFst_allPops_list_sum[[i]][allFst_allPops_list_sum[[i]] > allFst_allPops_list_quantiles[[i]][1]],
allFst_allPops_list_sum[[i]][allFst_allPops_list_sum[[i]] > allFst_allPops_list_quantiles[[i]][2]],
allFst_allPops_list_sum[[i]][allFst_allPops_list_sum[[i]] > allFst_allPops_list_quantiles[[i]][3]])
allFst_allPops_list_topTables[[names(allFst_allPops_list_sum[i])]] <- tempTableList
}
View(tempTableList)
allFst_allPops_list_topTables <- list()
tempTableList <- list()
for(i in 1:length(allFst_allPops_list_quantiles)){
tempTableList <- list("99%"=allFst_allPops_list_sum[[i]][allFst_allPops_list_sum[[i]] > allFst_allPops_list_quantiles[[i]][1]],
"95%"=allFst_allPops_list_sum[[i]][allFst_allPops_list_sum[[i]] > allFst_allPops_list_quantiles[[i]][2]],
"90%"=allFst_allPops_list_sum[[i]][allFst_allPops_list_sum[[i]] > allFst_allPops_list_quantiles[[i]][3]])
allFst_allPops_list_topTables[[names(allFst_allPops_list_sum[i])]] <- tempTableList
}
View(tempTableList)
diseaseFst_allPops_list_topTables <- list()
tempTableList <- list()
for(i in 1:length(diseaseFst_allPops_list_quantiles)){
tempTableList <- list("99%" = diseaseFst_allPops_list_sum[[i]][diseaseFst_allPops_list_sum[[i]] > diseaseFst_allPops_list_quantiles[[i]][1]],
"95%" = diseaseFst_allPops_list_sum[[i]][diseaseFst_allPops_list_sum[[i]] > diseaseFst_allPops_list_quantiles[[i]][2]],
"90%" = diseaseFst_allPops_list_sum[[i]][diseaseFst_allPops_list_sum[[i]] > diseaseFst_allPops_list_quantiles[[i]][3]])
diseaseFst_allPops_list_topTables[[names(diseaseFst_allPops_list_sum[i])]] <- tempTableList
}
View(diseaseFst_fixed)
View(diseaseFst_allPops_list_topTables)
View(diseaseFst_allPops_list_topTables)
diseaseFst_allPops_list_topTables[["1000GENOMES:phase_3:ALL"]][["99%"]][1:10]
allSNPfst_topTables[1:10]
View(allSNPfst_topTables)
allSNPfst_topTables[1][1:10]
allSNPfst_topTables[[1]][1:10]
allSNPfst_popsVSall_topTables[1:2]
allSNPfst_popsVSall_topTables[[1]][1:2]
allDiseaseSNPfst_topTables[[1]][1:10]
diseaseFst_popsVsalltopTables[[1]][1:10]
getwd()
setwd('..')
setwd('./fst_sum_topTables/')
save(allSNPfst_topTables, file = "allSNPfst_topTables.rds")
save(allSNPfst_popsVSall_topTables, file = "allSNPfst_popsVSall_topTables.rds")
save(allDiseaseSNPfst_topTables, file = "allDiseaseSNPfst_topTables.rds")
save(diseaseFst_popsVsalltopTables, file = "diseaseFst_popsVsalltopTables.rds")
save(allFst_allPops_list_topTables, file = "allFst_allPops_list_topTables.rds")
save(diseaseFst_allPops_list_topTables, file = "diseaseFst_allPops_list_topTables.rds")
View(allSNPfst_popsVSall_topTables)
allSNPfst_popsVSall_topTables[["99%"]]
getwd()
load("./workingData/fst_sums/allSNPfst_sum.rds")
dens_allSNPfst <- density(allSNPfst_sum)
?pch
q99 <- quantile(allSNPfst_sum, 0.99)
q95 <- quantile(allSNPfst_sum, 0.95)
q90 <- quantile(allSNPfst_sum, 0.90)
# pch = point character, cex = character expand
plot(allSNPfst_sum, main = "All Fst Sums, All Population Pairs", ylab = "Sum of Variant Fst", xlab = "Index of Sample", pch = 20, cex = .7)
abline(h = q99, col = 'green', lwd = 2)
abline(h = q95, col = 'blue', lwd = 2)
abline(h = q90, col = 'red', lwd = 2)
text(-4000, y = q99, "1%", pos = 3, offset = .5, col = 'darkgreen')
text(-4000, y = q95, "5%", pos = 3, offset = .5, col = 'darkblue')
text(-4000, y = q90, "10%", pos = 3, offset = .5, col = 'darkred')
plot(dens_allSNPfst, main = "Density of All SNPs All Pop-Pairs")
abline(v = q99, col = 'green', lwd = 2)
abline(v = q95, col = 'blue', lwd = 2)
abline(v = q90, col = 'red', lwd = 2)
legend("topright", inset = 0.02, bg = "white", cex = .80, text.font = 4, box.lwd = 0)
summary(allSNPfst_sum)
sd(allSNPfst_sum)
sumSts <- c("Mean: 27.44", "Median: 20.88", "Standard Deviation: 24.25", "Min: 0.00", "Max: 197.02")
legend("topright", inset = 0.02, legend = sumSts, bg = "white", cex = .80, text.font = 4, box.lwd = 0)
q99 <- quantile(allDiseaseSNPfst_sum, 0.99)
q95 <- quantile(allDiseaseSNPfst_sum, 0.95)
q90 <- quantile(allDiseaseSNPfst_sum, 0.90)
# pch = point character, cex = character expand
plot(allDiseaseSNPfst_sum, main = "All Disease Fst Sums w/ All Population Pairs", ylab = "Sum of Variant Fst", xlab = "Index of Sample", pch = 20, cex = .7)
abline(h = q99, col = 'green', lwd = 2)
abline(h = q95, col = 'blue', lwd = 2)
abline(h = q90, col = 'red', lwd = 2)
text(-4000, y = q99, "1%", pos = 3, offset = .5, col = 'darkgreen')
text(-4000, y = q95, "5%", pos = 3, offset = .5, col = 'darkblue')
text(-4000, y = q90, "10%", pos = 3, offset = .5, col = 'darkred')
dens_allDiseaseSNPfst <- density(allDiseaseSNPfst_sum)
plot(dens_allDiseaseSNPfst, main = "Density of All Disease SNPs w/ All Pop-Pairs")
summary(allDiseaseSNPfst_sum)
sd(allDiseaseSNPfst_sum)
abline(v = q99, col = 'green', lwd = 2)
abline(v = q95, col = 'blue', lwd = 2)
abline(v = q90, col = 'red', lwd = 2)
sumSts <- c("Mean: 28.08", "Median: 21.68", "Standard Deviation: 23.96", "Min: 0.00", "Max: 165.72")
legend("topright", inset = 0.02, legend = sumSts, bg = "white", cex = .80, text.font = 4, box.lwd = 0)
View(diseaseFst_popsVSall)
View(diseaseFst_popsVsalltopTables)
diseaseFst_popsVsalltopTables[["99%"]]
View(diseaseFst_popsVSall)
dfpvInspect <- diseaseFst_popsVsall
dfpvInspect <- diseaseFst_popsVSall
dfpvInspect <- dplyr::copy(diseaseFst_popsVSall)
?copy
?deepcopy
?clone
dfpvInspect[dfpvInspect < .8] <- NA
class(dfpvInspect)
sum(is.na.data.frame(dfpvInspect))
sum(is.na.data.frame(diseaseFst_popsVSall)) # 1,119,007
dim(dfpvInspect)
36097 * 31
quantile(diseaseFst_popsVSall, probs = c(.999, .99, .95, .90, .75, .5, .25))
?quantile
?duplicate
quantile(as.matrix(diseaseFst_popsVSall), probs = c(.999, .99, .95, .90, .75, .5, .25))
summary(as.matrix(diseaseFst_popsVSall))
summary_diseaseFst_popsVSall <- summary(as.matrix(diseaseFst_popsVSall))
